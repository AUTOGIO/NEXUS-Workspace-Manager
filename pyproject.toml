[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nexus"
version = "2.0.0"
description = "AI-Powered Workspace Intelligence for Apple Silicon"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "NEXUS Team", email = "team@nexus-workspace.com"}
]
maintainers = [
    {name = "NEXUS Maintainers", email = "maintainers@nexus-workspace.com"}
]
keywords = ["workspace", "ai", "macos", "yabai", "apple-silicon", "neural-engine"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Desktop Environment",
    "Topic :: System :: Systems Administration",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.7"
dependencies = [
    "streamlit>=1.28.0",
    "psutil>=5.9.0",
    "pyyaml>=6.0.1",
    "mlx-lm>=0.2.0",
    "transformers>=4.35.0",
    "torch>=2.1.0",
    "numpy>=1.24.0",
    "pandas>=2.1.0",
    "matplotlib>=3.7.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "rich>=13.7.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.11.0",
    "flake8>=6.1.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "sphinx>=7.2.0",
]
docs = [
    "sphinx>=7.2.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/NEXUS"
Documentation = "https://nexus-workspace.readthedocs.io/"
Repository = "https://github.com/yourusername/NEXUS.git"
"Bug Tracker" = "https://github.com/yourusername/NEXUS/issues"
"Source Code" = "https://github.com/yourusername/NEXUS"

[project.scripts]
nexus = "nexus.cli.main:main"
nexus-launcher = "nexus.cli.launcher:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["nexus*"]
exclude = ["tests*", "docs*"]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["nexus"]

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "streamlit.*",
    "psutil.*",
    "yaml.*",
    "mlx.*",
    "transformers.*",
    "torch.*",
    "numpy.*",
    "pandas.*",
    "matplotlib.*",
    "requests.*",
    "dotenv.*",
    "click.*",
    "rich.*",
    "typer.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["nexus"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
    ".eggs",
    "*.egg",
]

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.xenon]
max_absolute_complexity = 10
max_average_complexity = 6.0
